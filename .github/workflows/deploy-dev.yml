name: Deploy the app to development server
on:
  push:
    branches: ["deploy-dev"]
  
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python env
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.3
      
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          python manage.py test
        env:
          SECRET_KEY: release
          ENABLE_PSQL: false
          QRCODE: release
          ACCESS_TOKEN_EXPIRE: 3
          REFRESH_TOKEN_EXPIRE: 30

  Deploy:
    runs-on: [self-hosted, dev]
    needs: [Test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Shut down previous contatiner
        run: docker compose -f docker-compose-dev.yml down
      
      - name: Delete previous docker image
        continue-on-error: true
        run: docker image rm release_backend

      - name: Create dockerfile
        run: |
          cat <<EOF > dockerfile-dev
          FROM python:3.11.3
          ARG DJANGO_SUPERUSER_USERNAME
          ARG DJANGO_SUPERUSER_PASSWORD
          ARG DJANGO_SUPERUSER_EMAIL
          WORKDIR /app
          COPY requirements.txt ./
          RUN python -m pip install --upgrade pip
          RUN pip install -r requirements.txt
          COPY . .
          RUN python manage.py migrate --run-syncdb
          RUN python manage.py createsuperuser --no-input
          EXPOSE 80
          CMD ["python", "manage.py", "runserver", "0.0.0.0:80"]
          EOF

      - name: Build new docker image
        run: docker build --file dockerfile-dev --tag release_backend .
        env:
          DJANGO_SUPERUSER_USERNAME: release
          DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL: sogangrelease@gmail.com

      - name: Create docker compose file
        run: |
          cat <<EOF > docker-compose-dev.yml
          services:
            django:
              image: release_backend
              pull_policy: never
              ports:
                - 8000:80
              environments:
                - SECRET_KEY=${SECRET_KEY}
                - ENABLE_PSQL=true
                - PSQL_HOST=postgres
                - PSQL_PORT=5432
                - PSQL_DB=release
                - PSQL_USER=release
                - PSQL_PWD=release
                - QRCODE=release
                - ACCESS_TOKEN_EXPIRE=3
                - REFRESH_TOKEN_EXPIRE=30

            postgres:
              image: postgres
              environments:
                - POSTGRES_USER=release
                - POSTGRES_PASSWORD=release
          EOF
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
      - name: Start docker container using new image
        run: docker compose -f docker-compose-dev.yml up -d
